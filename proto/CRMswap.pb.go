// Code generated by protoc-gen-go. DO NOT EDIT.
// source: CRMswap.proto

package CRMswap

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RequestGET struct {
	CustomerId           string   `protobuf:"bytes,1,opt,name=Customer_id,json=CustomerId,proto3" json:"Customer_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequestGET) Reset()         { *m = RequestGET{} }
func (m *RequestGET) String() string { return proto.CompactTextString(m) }
func (*RequestGET) ProtoMessage()    {}
func (*RequestGET) Descriptor() ([]byte, []int) {
	return fileDescriptor_ac70c21766256814, []int{0}
}

func (m *RequestGET) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestGET.Unmarshal(m, b)
}
func (m *RequestGET) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestGET.Marshal(b, m, deterministic)
}
func (m *RequestGET) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestGET.Merge(m, src)
}
func (m *RequestGET) XXX_Size() int {
	return xxx_messageInfo_RequestGET.Size(m)
}
func (m *RequestGET) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestGET.DiscardUnknown(m)
}

var xxx_messageInfo_RequestGET proto.InternalMessageInfo

func (m *RequestGET) GetCustomerId() string {
	if m != nil {
		return m.CustomerId
	}
	return ""
}

type ResponseGET struct {
	CustomerId           string   `protobuf:"bytes,1,opt,name=Customer_id,json=CustomerId,proto3" json:"Customer_id,omitempty"`
	CustomerName         string   `protobuf:"bytes,2,opt,name=Customer_name,json=CustomerName,proto3" json:"Customer_name,omitempty"`
	CustomerType         string   `protobuf:"bytes,3,opt,name=Customer_type,json=CustomerType,proto3" json:"Customer_type,omitempty"`
	CustomerEmail        string   `protobuf:"bytes,4,opt,name=Customer_email,json=CustomerEmail,proto3" json:"Customer_email,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResponseGET) Reset()         { *m = ResponseGET{} }
func (m *ResponseGET) String() string { return proto.CompactTextString(m) }
func (*ResponseGET) ProtoMessage()    {}
func (*ResponseGET) Descriptor() ([]byte, []int) {
	return fileDescriptor_ac70c21766256814, []int{1}
}

func (m *ResponseGET) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseGET.Unmarshal(m, b)
}
func (m *ResponseGET) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseGET.Marshal(b, m, deterministic)
}
func (m *ResponseGET) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseGET.Merge(m, src)
}
func (m *ResponseGET) XXX_Size() int {
	return xxx_messageInfo_ResponseGET.Size(m)
}
func (m *ResponseGET) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseGET.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseGET proto.InternalMessageInfo

func (m *ResponseGET) GetCustomerId() string {
	if m != nil {
		return m.CustomerId
	}
	return ""
}

func (m *ResponseGET) GetCustomerName() string {
	if m != nil {
		return m.CustomerName
	}
	return ""
}

func (m *ResponseGET) GetCustomerType() string {
	if m != nil {
		return m.CustomerType
	}
	return ""
}

func (m *ResponseGET) GetCustomerEmail() string {
	if m != nil {
		return m.CustomerEmail
	}
	return ""
}

type ResponsePOST struct {
	CustomerId           string   `protobuf:"bytes,1,opt,name=Customer_id,json=CustomerId,proto3" json:"Customer_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResponsePOST) Reset()         { *m = ResponsePOST{} }
func (m *ResponsePOST) String() string { return proto.CompactTextString(m) }
func (*ResponsePOST) ProtoMessage()    {}
func (*ResponsePOST) Descriptor() ([]byte, []int) {
	return fileDescriptor_ac70c21766256814, []int{2}
}

func (m *ResponsePOST) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponsePOST.Unmarshal(m, b)
}
func (m *ResponsePOST) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponsePOST.Marshal(b, m, deterministic)
}
func (m *ResponsePOST) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponsePOST.Merge(m, src)
}
func (m *ResponsePOST) XXX_Size() int {
	return xxx_messageInfo_ResponsePOST.Size(m)
}
func (m *ResponsePOST) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponsePOST.DiscardUnknown(m)
}

var xxx_messageInfo_ResponsePOST proto.InternalMessageInfo

func (m *ResponsePOST) GetCustomerId() string {
	if m != nil {
		return m.CustomerId
	}
	return ""
}

type RequestPOST struct {
	CustomerId           string   `protobuf:"bytes,1,opt,name=Customer_id,json=CustomerId,proto3" json:"Customer_id,omitempty"`
	CustomerName         string   `protobuf:"bytes,2,opt,name=Customer_name,json=CustomerName,proto3" json:"Customer_name,omitempty"`
	CustomerType         string   `protobuf:"bytes,3,opt,name=Customer_type,json=CustomerType,proto3" json:"Customer_type,omitempty"`
	CustomerEmail        string   `protobuf:"bytes,4,opt,name=Customer_email,json=CustomerEmail,proto3" json:"Customer_email,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequestPOST) Reset()         { *m = RequestPOST{} }
func (m *RequestPOST) String() string { return proto.CompactTextString(m) }
func (*RequestPOST) ProtoMessage()    {}
func (*RequestPOST) Descriptor() ([]byte, []int) {
	return fileDescriptor_ac70c21766256814, []int{3}
}

func (m *RequestPOST) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestPOST.Unmarshal(m, b)
}
func (m *RequestPOST) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestPOST.Marshal(b, m, deterministic)
}
func (m *RequestPOST) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestPOST.Merge(m, src)
}
func (m *RequestPOST) XXX_Size() int {
	return xxx_messageInfo_RequestPOST.Size(m)
}
func (m *RequestPOST) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestPOST.DiscardUnknown(m)
}

var xxx_messageInfo_RequestPOST proto.InternalMessageInfo

func (m *RequestPOST) GetCustomerId() string {
	if m != nil {
		return m.CustomerId
	}
	return ""
}

func (m *RequestPOST) GetCustomerName() string {
	if m != nil {
		return m.CustomerName
	}
	return ""
}

func (m *RequestPOST) GetCustomerType() string {
	if m != nil {
		return m.CustomerType
	}
	return ""
}

func (m *RequestPOST) GetCustomerEmail() string {
	if m != nil {
		return m.CustomerEmail
	}
	return ""
}

func init() {
	proto.RegisterType((*RequestGET)(nil), "CRMswap.RequestGET")
	proto.RegisterType((*ResponseGET)(nil), "CRMswap.ResponseGET")
	proto.RegisterType((*ResponsePOST)(nil), "CRMswap.ResponsePOST")
	proto.RegisterType((*RequestPOST)(nil), "CRMswap.RequestPOST")
}

func init() { proto.RegisterFile("CRMswap.proto", fileDescriptor_ac70c21766256814) }

var fileDescriptor_ac70c21766256814 = []byte{
	// 234 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x75, 0x0e, 0xf2, 0x2d,
	0x2e, 0x4f, 0x2c, 0xd0, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x87, 0x72, 0x95, 0x74, 0xb9,
	0xb8, 0x82, 0x52, 0x0b, 0x4b, 0x53, 0x8b, 0x4b, 0xdc, 0x5d, 0x43, 0x84, 0xe4, 0xb9, 0xb8, 0x9d,
	0x4b, 0x8b, 0x4b, 0xf2, 0x73, 0x53, 0x8b, 0xe2, 0x33, 0x53, 0x24, 0x18, 0x15, 0x18, 0x35, 0x38,
	0x83, 0xb8, 0x60, 0x42, 0x9e, 0x29, 0x4a, 0xf3, 0x19, 0xb9, 0xb8, 0x83, 0x52, 0x8b, 0x0b, 0xf2,
	0xf3, 0x8a, 0x53, 0x89, 0xd1, 0x20, 0xa4, 0xcc, 0xc5, 0x0b, 0x57, 0x90, 0x97, 0x98, 0x9b, 0x2a,
	0xc1, 0x04, 0x56, 0xc2, 0x03, 0x13, 0xf4, 0x4b, 0xcc, 0x4d, 0x45, 0x51, 0x54, 0x52, 0x59, 0x90,
	0x2a, 0xc1, 0x8c, 0xaa, 0x28, 0xa4, 0xb2, 0x20, 0x55, 0x48, 0x95, 0x8b, 0x0f, 0xae, 0x28, 0x35,
	0x37, 0x31, 0x33, 0x47, 0x82, 0x05, 0xac, 0x0a, 0xae, 0xd5, 0x15, 0x24, 0xa8, 0xa4, 0xcf, 0xc5,
	0x03, 0x73, 0x60, 0x80, 0x7f, 0x30, 0xd1, 0x5e, 0x02, 0x07, 0x01, 0x51, 0x1a, 0xe8, 0xee, 0x25,
	0xa3, 0x3a, 0x2e, 0x58, 0x74, 0x09, 0x99, 0x73, 0x71, 0xb8, 0xbb, 0x86, 0xc4, 0xfb, 0x64, 0x16,
	0x97, 0x08, 0x09, 0xeb, 0xc1, 0xe2, 0x14, 0x11, 0x83, 0x52, 0x22, 0x48, 0x82, 0xf0, 0x68, 0x52,
	0x62, 0x10, 0xb2, 0xe2, 0xe2, 0x04, 0xf9, 0x0e, 0xa2, 0x53, 0x04, 0x5d, 0x27, 0x48, 0x4a, 0x4a,
	0x14, 0x43, 0x2b, 0x48, 0x58, 0x89, 0x21, 0x89, 0x0d, 0x9c, 0x66, 0x8c, 0x01, 0x01, 0x00, 0x00,
	0xff, 0xff, 0xbe, 0xbc, 0xd7, 0x7b, 0x44, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// CRMswapClient is the client API for CRMswap service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CRMswapClient interface {
	GET_List(ctx context.Context, in *RequestGET, opts ...grpc.CallOption) (*ResponseGET, error)
	POST_List(ctx context.Context, in *RequestPOST, opts ...grpc.CallOption) (*ResponsePOST, error)
}

type cRMswapClient struct {
	cc grpc.ClientConnInterface
}

func NewCRMswapClient(cc grpc.ClientConnInterface) CRMswapClient {
	return &cRMswapClient{cc}
}

func (c *cRMswapClient) GET_List(ctx context.Context, in *RequestGET, opts ...grpc.CallOption) (*ResponseGET, error) {
	out := new(ResponseGET)
	err := c.cc.Invoke(ctx, "/CRMswap.CRMswap/GET_List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cRMswapClient) POST_List(ctx context.Context, in *RequestPOST, opts ...grpc.CallOption) (*ResponsePOST, error) {
	out := new(ResponsePOST)
	err := c.cc.Invoke(ctx, "/CRMswap.CRMswap/POST_List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CRMswapServer is the server API for CRMswap service.
type CRMswapServer interface {
	GET_List(context.Context, *RequestGET) (*ResponseGET, error)
	POST_List(context.Context, *RequestPOST) (*ResponsePOST, error)
}

// UnimplementedCRMswapServer can be embedded to have forward compatible implementations.
type UnimplementedCRMswapServer struct {
}

func (*UnimplementedCRMswapServer) GET_List(ctx context.Context, req *RequestGET) (*ResponseGET, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GET_List not implemented")
}
func (*UnimplementedCRMswapServer) POST_List(ctx context.Context, req *RequestPOST) (*ResponsePOST, error) {
	return nil, status.Errorf(codes.Unimplemented, "method POST_List not implemented")
}

func RegisterCRMswapServer(s *grpc.Server, srv CRMswapServer) {
	s.RegisterService(&_CRMswap_serviceDesc, srv)
}

func _CRMswap_GET_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestGET)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CRMswapServer).GET_List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/CRMswap.CRMswap/GET_List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CRMswapServer).GET_List(ctx, req.(*RequestGET))
	}
	return interceptor(ctx, in, info, handler)
}

func _CRMswap_POST_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestPOST)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CRMswapServer).POST_List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/CRMswap.CRMswap/POST_List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CRMswapServer).POST_List(ctx, req.(*RequestPOST))
	}
	return interceptor(ctx, in, info, handler)
}

var _CRMswap_serviceDesc = grpc.ServiceDesc{
	ServiceName: "CRMswap.CRMswap",
	HandlerType: (*CRMswapServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GET_List",
			Handler:    _CRMswap_GET_List_Handler,
		},
		{
			MethodName: "POST_List",
			Handler:    _CRMswap_POST_List_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "CRMswap.proto",
}
